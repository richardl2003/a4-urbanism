@startuml

title Island: Exporters

package Geography {

  class VertexDecorator
  class Border
  class Tile

}

package Exporters {

  package Converters {
    class IslandToMeshConverter {
      +process(Island): Mesh
      -convertToVertices(List<VertexDecorator>): VertexSet
      -convertToSegments(List<Border>): SegmentSet
      -convertToPolygons(List<Tile>): PolygonSet

    }
    class MeshToIslandConverter {
      -{final} vertexDecorators: List<VertexDecorator>
      -{final} borders: List<Border>
      -{final} tiles: List<Tile>
      +process(Mesh): Island
      -convert(PolygonSet): void
      -getAssociatedBorder(List<Segment>): List<Border>
      -convert(SegmentSet): void
      -convert(VertexSet): void
    }
    class MeshToStructsConverter {
      +process(Mesh): Structs.Mesh
      -convertVertices(GeometrySet<Vertex>): Set<Structs.Vertex>
      -convertSegments(GeometrySet<Segment>): Set<Structs.Segment>
      -convertPolygons(GeometrySet<Polygon>): Set<Structs.Polygon>
    }
    class StructsToMeshConverter {
      -{final} propertyHandler: PropertyHandler
      -vertices: VertexSet
      -segments: SegmentSet
      -polygons: PolygonSet

      +process(Structs.Mesh): Mesh
      -extractGeometries(Structs.Mesh): void
      -extractVertices(List<Structs.Vertex>): VertexSet
      -extractSegments(List<Structs.Segment>, GeometrySet<Vertex>): SegmentSet
      -extractPolygons(List<Structs.Polygon>, GeometrySet<Segment>, GeometrySet<Vertex>): PolygonSet
      -extractNeighbours(List<Structs.Polygon>): void
    }
  }

  interface Export {
    ~upgrade(Structs.Mesh): Mesh
    ~upgrade(Mesh): Island
    ~process(Island): Mesh
    ~process(Mesh): Structs.Mesh
  }
  class Exporter {
    +upgrade(Structs.Mesh): Mesh
    +upgrade(Mesh): Island
    +process(Island): Mesh
    +process(Mesh): Structs.Mesh
  }
  class PolygonMapper {
    +process(Polygon): JTS.Polygon
  }

}

package MeshADT {

  package EnhancedSets {
    class PolygonSet
    class SegmentSet
    class VertexSet
  }

}

package io {

  package Structs {

    class Polygon
    class Vertex
    class Segment

  }

}

Exporters.Converters.MeshToIslandConverter *-up- Geography

Export .up.> Island
Exporter .up.|> Export

Exporters.Converters.IslandToMeshConverter .> Island
Exporters.Converters.IslandToMeshConverter .up.> Geography

Exporters.Converters.MeshToStructsConverter .up.> MeshADT.EnhancedSets

Exporters.Converters.StructsToMeshConverter *-up- MeshADT.EnhancedSets
Exporters.Converters.StructsToMeshConverter .up.> io.Structs

Exporters.PolygonMapper ..> io.Structs.Polygon

@enduml